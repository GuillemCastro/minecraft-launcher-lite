name: Build and Release Wails App

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22' # Adjust if needed

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libwebkit2gtk-4.0-dev || true \
            libglib2.0-dev \
            libnotify-dev \
            libcairo2-dev \
            libpango1.0-dev \
            libgdk-pixbuf2.0-dev \
            libxi-dev \
            libxtst-dev \
            pkg-config \
            wget \
            ca-certificates

      - name: Install Wails CLI
        run: |
          echo "Installing Wails CLI..."
          if [ "$RUNNER_OS" == "Windows" ]; then
            $env:PATH += ";$(go env GOPATH)\bin"
            go install github.com/wailsapp/wails/v2/cmd/wails@latest
          else
            export PATH="$PATH:$(go env GOPATH)/bin"
            go install github.com/wailsapp/wails/v2/cmd/wails@latest
          fi
        shell: bash

      - name: Build App
        run: |
          echo "Building App..."
          if [ "$RUNNER_OS" == "Windows" ]; then
            $env:PATH += ";$(go env GOPATH)\bin"
            wails build -clean
          else
            export PATH="$PATH:$(go env GOPATH)/bin"
            wails build -clean
          fi
        shell: bash

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}
          path: build/bin/**

  release:
    name: Update Latest Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create or update 'Latest' release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: Latest
          draft: false
          prerelease: false
          files: artifacts/**/*

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
